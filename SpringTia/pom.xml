<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eas.com</groupId>
    <artifactId>spring-tia</artifactId>
    <version>1.0-SNAPSHOT</version>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <packaging>war</packaging>
    <description>
        Tips: @Scheduled and @Async method. Example in TaskService.java.
        With the @Async we can pass parameter and return some value; in this case we need to call the method
        With the @Scheduled wen cannot pass parameter neither return some value; in this case we do not need call directly the method,
        the method is called automatically in relation with the expression (cron expression)

        Web application(Spring MVC), Xml context configuration, import one xml context in other,
        Application with different modules, each module have own xml configuration, test, and source code.
        Each module have a same structure, web, facade, service, dao. The web package contain the Interface for the
        front End Client.
        The facade package contain the interface for other module that want use functions of this module.
        Load the list of value from file properties, for inject into Map in one controller.
        Use of log4j as log
    </description>

    <properties>
        <spring.version>4.3.5.RELEASE</spring.version>
        <log4j.version>1.2.17</log4j.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
    </dependencies>

</project>